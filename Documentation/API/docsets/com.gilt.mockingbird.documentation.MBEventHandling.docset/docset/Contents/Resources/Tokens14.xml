<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MBEventHandler.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MBEventHandler</TokenIdentifier>
			<Abstract type="html">The base class for classes that handle NSNotification events.</Abstract>
			<DeclaredIn>MBEventListener.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBEventHandler/classForEventHandler:</TokenIdentifier>
			<Abstract type="html">Attempts to determine the implementing class of the event handler with the
given name.</Abstract>
			<DeclaredIn>MBEventListener.h</DeclaredIn>
			
			<Declaration>+ (nullable Class)classForEventHandler:(nonnull NSString *)eventHandlerName</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventHandlerName</Name>
					<Abstract type="html">the name of the event handler.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The implementing class, or nil if none could be found.</Abstract></ReturnValue>
			<Anchor>//api/name/classForEventHandler:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBEventHandler/shouldHandleEvent:receivedByListener:container:</TokenIdentifier>
			<Abstract type="html">Allows the receiver to control whether a given event should be passed
to its eventReceived:byListener:forContainer: method.</Abstract>
			<DeclaredIn>MBEventListener.h</DeclaredIn>
			
			<Declaration>- (BOOL)shouldHandleEvent:(nonnull NSNotification *)event receivedByListener:(nullable MBEventListener *)listener container:(nullable MBEventHandlerContainer *)container</Declaration>
			<Parameters>
				<Parameter>
					<Name>event</Name>
					<Abstract type="html">the event that was received.</Abstract>
				</Parameter><Parameter>
					<Name>listener</Name>
					<Abstract type="html">the event listener that received the event. May be nil
            if event handling is being invoked manually.</Abstract>
				</Parameter><Parameter>
					<Name>container</Name>
					<Abstract type="html">the receiver&apos;s container. May be the listener itself,
            or may be nil if event handling is being invoked manually.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the receiver is interested in handling the event;
            NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/shouldHandleEvent:receivedByListener:container:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBEventHandler/eventReceived:byListener:container:</TokenIdentifier>
			<Abstract type="html">Must be implemented by subclasses to process an event.</Abstract>
			<DeclaredIn>MBEventListener.h</DeclaredIn>
			
			<Declaration>- (void)eventReceived:(nonnull NSNotification *)event byListener:(nullable MBEventListener *)listener container:(nullable MBEventHandlerContainer *)container</Declaration>
			<Parameters>
				<Parameter>
					<Name>event</Name>
					<Abstract type="html">the event that was received.</Abstract>
				</Parameter><Parameter>
					<Name>listener</Name>
					<Abstract type="html">the event listener that received the event. May be nil
            if event handling is being invoked manually.</Abstract>
				</Parameter><Parameter>
					<Name>container</Name>
					<Abstract type="html">the receiver&apos;s container. May be the listener itself,
            or may be nil if event handling is being invoked manually.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/eventReceived:byListener:container:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBEventHandler/setTraceExecution:</TokenIdentifier>
			<Abstract type="html">When YES, debug information will be logged to the console when events
    are handled. </Abstract>
			<DeclaredIn>MBEventListener.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL traceExecution</Declaration>
			
			
			<Anchor>//api/name/traceExecution</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBEventHandler/traceExecution</TokenIdentifier>
			<Abstract type="html">When YES, debug information will be logged to the console when events
    are handled. </Abstract>
			<DeclaredIn>MBEventListener.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL traceExecution</Declaration>
			
			
			<Anchor>//api/name/traceExecution</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBEventHandler/traceExecution</TokenIdentifier>
			<Abstract type="html">When YES, debug information will be logged to the console when events
    are handled. </Abstract>
			<DeclaredIn>MBEventListener.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL traceExecution</Declaration>
			
			
			<Anchor>//api/name/traceExecution</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
        
	</File>
</Tokens>